useDynLib("Rfast2", .registration = TRUE)

importFrom("stats", "pt", "cov", "pchisq", "pf", "cor", "qt", "sd", 
"qnorm", "dpois", "pnorm", "rchisq", "rexp", ".lm.fit", "qf", 
"model.matrix", "aggregate", "prcomp", "qchisq", "optimise", 
"runif", "dnorm", "dbinom", "dexp", "dgeom", "nlm" , "optimize",
"optim", "lm.fit")

importFrom("Rfast", vm.mle, colvm.mle, colmeans, colsums, eachrow, 
group, colVars, spdinv, mediandir, colMins, nth,
gammamle, weibull.mle, poisson_only, logistic_only, multinom.regs,
multinom.mle, Var, normlog.regs, eachcol.apply, Sort,coldiffs,rowsums)

importFrom("RANN", nn2)

importFrom(Rcpp, evalCpp)


export(Intersect,Merge,Quantile,add.term,benchmark,bic.regs,big.knn,bigknn.cv,binom.reg,boot.hotel2,boot.james,boot.student2,boot.ttest1,censpois.mle,censweibull.mle,circ.cor1,circ.cors1,cls,cluster.lm,col.waldpoisrat,colGroup,colQuantile,colTrimMean,colborel.mle,colhalfnorm.mle,coljack.means,collogitnorm.mle,collognorm.mle,colmeansvars,colordinal.mle,colspml.mle,cor_test,covar,depth.mahala,diffic,discrim,embed.circaov,empirical.entropy,fbed.reg,fipois.reg,gammapois.mle,gammareg,gammaregs,gee.reg,gumbel.reg,hcf.circaov,hellinger.countreg,het.circaov,hp.reg,is.lower.tri,is.skew.symmetric,is.upper.tri,jack.mean,km,laplace.nb,laplacenb.pred,leverage,lm.bsreg,lm.drop1,lm.parboot,logiquant.regs,logitnorm.nb,logitnormnb.pred,lr.circaov,lud,mle.lda,mmpc,mmpc2,moranI,multinom.reg,multinomreg.cv,multispml.mle,multivm.mle,nb.cv,negbin.reg,normlog.nb,normlognb.pred,overdispreg.test,pc.sel,pca,pcr,perm.ttest2,pooled.colVars,prophelling.reg,propjs.reg,propols.reg,rbeta1,refmeta,reg.mle.lda,regmlelda.cv,riag,rowQuantile,rowTrimMean,rowjack.means,sclr,score.zipregs,sp.logiregs,spml.nb,spmlnb.pred,tobit.reg,trim.mean,vm.nb,vmnb.pred,wald.poisrat,walter.ci,weib.regs,weibull.nb,weibullnb.pred,welch.tests,ztp.reg)

S3method(print,benchmark)








